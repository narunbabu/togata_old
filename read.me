

php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === '55ce33d7678c5a611085589f1f3ddf8b3c52d662cd01d4ba75c0ee0459970c2200a51f492d557530c71c15d8dba01eae') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
php composer-setup.php
php -r "unlink('composer-setup.php');"

composer create-project laravel/laravel togata1 4.2.*

composer create-project laravel/laravel example-app

composer update --with-all-dependencies

### https://blog.logrocket.com/implementing-jwt-authentication-laravel-9/

composer require barryvdh/laravel-cors jrean/laravel-user-verification tymon/jwt-auth


php artisan make:controller Auth/AuthController

php artisan key:generate
php artisan config:cache


php artisan make:model Post -m
php artisan migrate
php artisan make:controller PostController
php artisan make:controller CenusController
composer dump-autoload
php composer.phar dump-autoload
php artisan make:migration create_employeeDetails_table


php artisan key:generate
php artisan config:cache
php artisan migrate --seed
composer dump-autoload
php artisan serve

php artisan serve --port=8080



             ://medium.com/laravel-news/the-simple-guide-to-deploy-laravel-5-application-on-shared-hosting-1a8d0aee923e
composer create-project --prefer-dist laravel/laravel first_blog "5.3.*"
composer create-project --prefer-dist laravel/laravel fresh "5.3.*"
On Local machine
git init
git add .
git commit -m "first commit"
git remote add origin https://github.com/narunbabu/laratest.git
git push -u origin master

Generated by following the steps mentioned in the url
http://www.expertphp.in/article/api-authentication-using-jwt-in-laravel-5-4-tutorial-with-example


And for articles

https://www.toptal.com/laravel/restful-laravel-api-tutorial


On Server
git clone https://github.com/narunbabu/laratest.git laratest
cd www/sthali/
cd public_html/sthali/
cp -r ~/laratest/public .
cp -r ~/laratest/public/index.php .
cp -r ~/laratest/public/.htaccess .
vi index.php

require __DIR__.’/../../laratest/bootstrap/autoload.php’;
$app = require_once __DIR__.’/../../laratest/bootstrap/app.php’;


chmod -R o+w laratest/storage


curl -sS https://getcomposer.org/installer | php
php composer.phar install
php composer.phar dumpautoload -o
php artisan config:cache

Fatal error: Class 'Illuminate\Foundation\Application' not found in /home1/thogativ/laratest/bootstrap/app.php on line 14

php artisan route:cache

php composer.phar dump-autoload
php composer.phar update --no-scripts

eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjEsImlzcyI6Imh0dHA6Ly8xMjcuMC4wLjE6ODAwMC9hcGkvYXV0aC9sb2dpbiIsImlhdCI6MTUwNjE4NDg2NSwiZXhwIjoxNTA2MTg4NDY1LCJuYmYiOjE1MDYxODQ4NjUsImp0aSI6IkEwa0tyT1BaTUU5Q2pIc1oifQ.-G65s4cXMe_H_CJgWcVuI5ZQELUKE-x2AAuirtQACpg


git clone https://github.com/narunbabu/lara-jwt54.git
cd ~/public_html/api
cp -r ~/lara-jwt54/public .
cp -r ~/lara-jwt54/public/index.php .
cp -r ~/lara-jwt54/public/.htaccess .
vi index.php
require __DIR__.’/../../lara-jwt54/bootstrap/autoload.php’;
$app = require_once __DIR__.’/../../lara-jwt54/bootstrap/app.php’;
cd


chmod -R o+w lara-jwt54/storage
cp lara-jwt54/.env.example lara-jwt54/.env
vi lara-jwt54/.env
edit database details
cd lara-jwt54/

curl -sS https://getcomposer.org/installer | /opt/php70/bin/php
/opt/php70/bin/php composer.phar create-project --prefer-dist laravel/laravel ljwt54 "5.4.*"
cd ljwt54
/opt/php70/bin/php ../composer.phar require tymon/jwt-auth
composer create-project --prefer-dist laravel/laravel blog "5.4.*"

git config --global user.name "narunbabu"
git config --global user.email "narun.iitb@gmail.com"
/opt/php70/bin/php composer.phar install
php composer.phar install

require __DIR__.’/../../laraprojects/ljwt54/bootstrap/autoload.php’;
$app = require_once __DIR__.’/../../laraprojects/ljwt54/bootstrap/app.php’;
cp -r ~/laraprojects/ljwt54/public .
cp -r ~/laraprojects/ljwt54/public/index.php .
cp -r ~/laraprojects/ljwt54/public/.htaccess .
cd laraprojects/ljwt
/opt/php70/bin/php artisan migrate
php artisan make:model Intiperu --all 
php artisan make:seeder RoleSeeder
php artisan make:migration 'relationships_to_villages'
for model
php artisan make:model Article -m
php artisan migrate
php artisan make:seeder ArticlesTableSeeder
/opt/php70/bin/php artisan make:seeder ArticlesTableSeeder
class ArticlesTableSeeder extends Seeder
{
    public function run()
    {
        // Let's truncate our existing records to start from scratch.
        Article::truncate();

        $faker = \Faker\Factory::create();

        // And now, let's create a few articles in our database:
        for ($i = 0; $i < 50; $i++) {
            Article::create([
                'title' => $faker->sentence,
                'body' => $faker->paragraph,
            ]);
        }
    }
}

/opt/php70/bin/php artisan db:seed --class=ArticlesTableSeeder
### Then dbseeder

class DatabaseSeeder extends Seeder
{
    public function run()
    {
        $this->call(ArticlesTableSeeder::class);
        $this->call(UsersTableSeeder::class);
    }
}

This way, we can simply run $ php artisan db:seed 

/opt/php70/bin/php artisan make:middleware Cors

rm public_html/api/.index.php.swp>middleware('api',')

#JWT config
php composer.phar require php-open-source-saver/jwt-auth laravel/telescope
php artisan vendor:publish --provider="PHPOpenSourceSaver\JWTAuth\Providers\LaravelServiceProvider"

/opt/alt/php80/usr/bin/php artisan vendor:publish --provider="PHPOpenSourceSaver\JWTAuth\Providers\LaravelServiceProvider"
php artisan jwt:secret

in config/auth.php
'api' => [
            'driver' => 'jwt',
            'provider' => 'users',
        ],

curl -sS https://getcomposer.org/installer | /opt/php70/bin/php


ssh -p 65002 u441069787@141.136.33.134
curl -sS https://getcomposer.org/installer | /opt/alt/php81/usr/bin/php
curl -sS https://getcomposer.org/installer | /opt/alt/php70/usr/bin/php

curl -sS https://getcomposer.org/installer | /opt/alt/php80/usr/bin/php

/opt/alt/php81/usr/bin/php composer.phar create-project laravel/laravel togata 
/opt/alt/php80/usr/bin/php composer.phar create-project laravel/laravel togata 
/opt/alt/php81/usr/bin/php composer.phar require tymon/jwt-auth




/opt/alt/php81/usr/bin/php composer.phar install
/opt/alt/php80/usr/bin/php composer.phar install
/opt/alt/php73/usr/bin/php composer.phar install
/opt/alt/php81/usr/bin/php composer.phar dump-autoload
/opt/alt/php80/usr/bin/php composer.phar dump-autoload
/opt/alt/php81/usr/bin/php composer.phar clear-cache
/opt/alt/php81/usr/bin/php artisan optimize
/opt/alt/php81/usr/bin/php artisan migrate:reset
/opt/alt/php81/usr/bin/php artisan migrate --seed
/opt/alt/php80/usr/bin/php
cd togata.org/public_html/
mv -r ~/domains/togata.org/togatagit/public/. .
cp -r ~/domains/togata.org/togata/public/. .
cp -r ~/domains/togata.org/togatagit/public/index.php .
cp -r ~/domains/togata.org/togatagit/public/.htaccess .

require __DIR__.'/../togatagit/bootstrap/autoload.php';
$app = require_once __DIR__.'/../togatagit/bootstrap/app.php';

curl -sS https://getcomposer.org/installer | /opt/cpanel/ea-php71/root/usr/bin/php

/opt/cpanel/ea-php71/root/usr/bin/php composer.phar require jrean/laravel-user-verification:dev-master

/opt/cpanel/ea-php71/root/usr/bin/php artisan vendor:publish --provider="Jrean\UserVerification\UserVerificationServiceProvider" --tag="config"
/opt/cpanel/ea-php71/root/usr/bin/php composer.phar clear-cache

/opt/cpanel/ea-php71/root/usr/bin/php artisan migrate --path="/vendor/jrean/laravel-user-verification/src/resources/migrations"

php artisan schedule:work // This will run a program kept in kernel.php


eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_rsa

git clone git@github.com:narunbabu/togata_old.git

/opt/alt/php81/usr/bin/php composer.phar install
/opt/alt/php81/usr/bin/php composer.phar dump-autoload
/opt/alt/php81/usr/bin/php artisan migrate:refresh --seed

composer update phpseclib/phpseclib laravel/telescope --with-all-dependencies
DROP TABLE `positions`, `members`, `jurisdictions`,`sanghams`